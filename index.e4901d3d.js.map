{"mappings":"AAAe,SAAAA,EAA2BC,EAAO,GAC/C,OAAOC,MACL,iIAAiID,iBACjIE,MAAKC,GAAQA,EAAKC,Q,CCHtB,MAAMC,EAAUC,SAASC,cAAc,iBAExB,SAAAC,EAAsBC,GACnC,MAAMC,EAASD,EACZE,KAAIC,GACI,gEAAgEA,EAAIC,4CAA4CD,EAAIE,sBAAsBF,EAAIG,+BAA+BH,EAAIG,mBAEzLC,KAAK,IAERX,EAAQY,UAAYP,C,CCLtB,MAAMQ,EAAUZ,SAASC,cAAc,sBAEvC,IAAIY,EAAoB,EACpBC,EAAa,EAUF,SAAAC,EAAoBC,EAAaC,GAC9C,IAAIb,EAAS,GAKbS,EAAoBG,EAEhBA,EAAc,EAChBZ,GACE,+GACuB,IAAhBY,IACTZ,GACE,yHAGAY,EAAc,IAChBZ,GACE,gFAEAY,EAAc,IAChBZ,GACE,kFAEAY,EAAc,IAChBZ,GAAU,gEAvBQY,EAAc,mBAyB9BA,EAAc,IAChBZ,GAAU,gEAzBQY,EAAc,mBA2BlCZ,GAAU,0EACsCY,0BAE5CC,EAAW,EAAID,IACjBZ,GAAU,gEA7BOY,EAAc,mBA+B7BC,EAAW,EAAID,IACjBZ,GAAU,gEAjCOY,EAAc,mBAmC7BC,EAAW,EAAID,IACjBZ,GACE,kFAEAa,EAAWD,IACbZ,GAAU,0EACoCa,2BAI5CA,EAAWD,EACbZ,GACE,qGACOa,IAAaD,IACtBZ,GACE,6GAGJQ,EAAQD,UAAYP,EAKtB,SAAiCV,EAAMuB,GACjCvB,IAASuB,EACXH,EAAa,EACJpB,GAAQ,IACjBoB,EAAa,EACbA,GAAcpB,GAECkB,EAAQM,SAASJ,GAAYK,kBACrCC,UAAUC,IAAI,U,CAXvBC,CAAwBN,EAAaC,E,CAnEvCL,EAAQW,iBAAiB,SAiFzB,SAAgCC,GAC9B,GAAIC,QAAQD,EAAIE,OAAOC,QAAQ,eAO7B,OANAd,GAAqB,OACrBpB,EAAeoB,GAAmBjB,MAAKO,IACrC,MAAMc,EAAWW,KAAKC,KAAK1B,EAAK2B,UAAY3B,EAAK4B,KAAKC,QACtD9B,EAAaC,EAAK4B,MAClBhB,EAAWF,EAAmBI,EAAS,IAI3C,GAAIQ,QAAQD,EAAIE,OAAOC,QAAQ,cAO7B,OANAd,GAAqB,OACrBpB,EAAeoB,GAAmBjB,MAAKO,IACrC,MAAMc,EAAWW,KAAKC,KAAK1B,EAAK2B,UAAY3B,EAAK4B,KAAKC,QACtD9B,EAAaC,EAAK4B,MAClBhB,EAAWF,EAAmBI,EAAS,IAK3C,GAA4B,WAAxBO,EAAIE,OAAOO,SACb,OAEF,GAA+B,QAA3BT,EAAIE,OAAOQ,YACb,OAGF,MAAMxC,EAAOyC,OAAOX,EAAIE,OAAOQ,aAE/BzC,EAAeC,GAAME,MAAKO,IACxB,MAAMc,EAAWW,KAAKC,KAAK1B,EAAK2B,UAAY3B,EAAK4B,KAAKC,QACtD9B,EAAaC,EAAK4B,MAClBhB,EAAWrB,EAAMuB,EAAS,G,ICnH9BxB,IAAiBG,MAAKO,IACpB,MAAMc,EAAWW,KAAKC,KAAK1B,EAAK2B,UAAY3B,EAAK4B,KAAKC,QACtD9B,EAAaC,EAAK4B,MAClBhB,EAAW,EAAGE,EAAS","sources":["src/js/fetch-countries-api.js","src/js/create-murk-up.js","src/js/pagination.js","src/index.js"],"sourcesContent":["export default function fetchCountriesApi(page = 1) {\n  return fetch(\n    `https://pixabay.com/api/?key=32144711-033503d2fc66376fdc1e9e47c&q=beautiful+girl&image_type=photo&orientation=horizontal&page=${page}&per_page=30`\n  ).then(resp => resp.json());\n}\n","const dataBox = document.querySelector('.js-fetch-box');\n\nexport default function createMurkUp(data) {\n  const murkUp = data\n    .map(img => {\n      return `<div class=\"box\"><a class=\"large-image\" href=\"#\" data-large=\"${img.largeImageURL}\"><img class=\"box-img\" src=\"${img.webformatURL}\" alt=\"${img.tags}\" width=\"400px\" ></a><p>${img.tags}</p></div>`;\n    })\n    .join('');\n\n  dataBox.innerHTML = murkUp;\n}\n","import fetchCountries from './fetch-countries-api';\nimport createMurkUp from './create-murk-up';\n// import countsAllPages from './counts-all-pages';\n\nconst listRef = document.querySelector('.js-pagination-box');\n\nlet globalCurrentPage = 0;\nlet childIndex = 0;\n\nlistRef.addEventListener('click', renderPaginationMurkUp);\n\n/**\n * Create pagination\n * @param {Number} currentPage\n * @param {Number} allPages\n * @return {String}\n */\nexport default function pagination(currentPage, allPages) {\n  let murkUp = '';\n  let beforeTwoPage = currentPage - 2;\n  let beforeOnePage = currentPage - 1;\n  let afterTwoPage = currentPage + 2;\n  let afterOnePage = currentPage + 1;\n  globalCurrentPage = currentPage;\n\n  if (currentPage > 1) {\n    murkUp +=\n      '<li class=\"item-pag\"><button type=\"button\" class=\"link-pag link-pag--btn btn-left btn-rotate\"></button></li>';\n  } else if (currentPage === 1) {\n    murkUp +=\n      '<li class=\"item-pag\"><button type=\"button\" class=\"link-pag link-pag--btn btn-rotate link-pag--hidden\" ></button></li>';\n  }\n\n  if (currentPage > 1) {\n    murkUp +=\n      '<li class=\"item-pag\"><button type=\"button\" class=\"link-pag\" >1</button></li>';\n  }\n  if (currentPage > 4) {\n    murkUp +=\n      '<li class=\"item-pag\"><button type=\"button\" class=\"link-pag\" >...</button></li>';\n  }\n  if (currentPage > 3) {\n    murkUp += `<li class=\"item-pag\"><button type=\"button\" class=\"link-pag\" >${beforeTwoPage}</button></li>`;\n  }\n  if (currentPage > 2) {\n    murkUp += `<li class=\"item-pag\"><button type=\"button\" class=\"link-pag\" >${beforeOnePage}</button></li>`;\n  }\n  murkUp += `<li class=\"item-pag\">\n        <button type=\"button\" class=\"link-pag\" >${currentPage}</button>\n      </li>`;\n  if (allPages - 1 > currentPage) {\n    murkUp += `<li class=\"item-pag\"><button type=\"button\" class=\"link-pag\" >${afterOnePage}</button></li>`;\n  }\n  if (allPages - 2 > currentPage) {\n    murkUp += `<li class=\"item-pag\"><button type=\"button\" class=\"link-pag\" >${afterTwoPage}</button></li>`;\n  }\n  if (allPages - 3 > currentPage) {\n    murkUp +=\n      '<li class=\"item-pag\"><button type=\"button\" class=\"link-pag\" >...</button></li>';\n  }\n  if (allPages > currentPage) {\n    murkUp += `<li class=\"item-pag\">\n        <button type=\"button\" class=\"link-pag\" >${allPages}</button>\n      </li>`;\n  }\n\n  if (allPages > currentPage) {\n    murkUp +=\n      '<li class=\"item-pag\"><button type=\"button\" class=\"link-pag link-pag--btn btn-right\"></button></li>';\n  } else if (allPages === currentPage) {\n    murkUp +=\n      '<li class=\"item-pag\"><button type=\"button\" class=\"link-pag link-pag--btn link-pag--hidden\"></button></li>';\n  }\n\n  listRef.innerHTML = murkUp;\n\n  createAccentCurrentPage(currentPage, allPages);\n}\n\nfunction createAccentCurrentPage(page, allPages) {\n  if (page === allPages) {\n    childIndex = 5;\n  } else if (page <= 5) {\n    childIndex = 0;\n    childIndex += page;\n  }\n  const firstRef = listRef.children[childIndex].firstElementChild;\n  firstRef.classList.add('current');\n}\n\nfunction renderPaginationMurkUp(evt) {\n  if (Boolean(evt.target.closest('.btn-right'))) {\n    globalCurrentPage += 1;\n    fetchCountries(globalCurrentPage).then(data => {\n      const allPages = Math.ceil(data.totalHits / data.hits.length);\n      createMurkUp(data.hits);\n      pagination(globalCurrentPage, allPages);\n    });\n    return;\n  }\n  if (Boolean(evt.target.closest('.btn-left'))) {\n    globalCurrentPage -= 1;\n    fetchCountries(globalCurrentPage).then(data => {\n      const allPages = Math.ceil(data.totalHits / data.hits.length);\n      createMurkUp(data.hits);\n      pagination(globalCurrentPage, allPages);\n    });\n    return;\n  }\n\n  if (evt.target.nodeName !== 'BUTTON') {\n    return;\n  }\n  if (evt.target.textContent === '...') {\n    return;\n  }\n\n  const page = Number(evt.target.textContent);\n\n  fetchCountries(page).then(data => {\n    const allPages = Math.ceil(data.totalHits / data.hits.length);\n    createMurkUp(data.hits);\n    pagination(page, allPages);\n  });\n}\n","import fetchCountries from './js/fetch-countries-api';\nimport pagination from './js/pagination';\nimport createMurkUp from './js/create-murk-up';\n// import createModalMurkUp from './js/create-modal-murk-up';\n\n// const backdrop = document.querySelector('.backdrop');\n\nfetchCountries().then(data => {\n  const allPages = Math.ceil(data.totalHits / data.hits.length);\n  createMurkUp(data.hits);\n  pagination(1, allPages);\n  // const link = document.querySelectorAll('.large-image');\n\n  // for (let i = 0; i < link.length; i += 1) {\n  //   const element = link[i];\n  //   element.addEventListener('click', evt => {\n  //     console.log(evt.currentTarget.dataset.large);\n  //     evt.preventDefault();\n  //     createModalMurkUp(evt.currentTarget.dataset.large);\n  //     backdrop.classList.remove('is-hidden');\n  //   });\n  // }\n  // console.log(link);\n  // console.log('dsa');\n});\n\n// backdrop.addEventListener('click', evt => {\n//   if (!evt.target.classList.contains('backdrop')) {\n//     return;\n//   }\n//   const isMenuOpen = backdrop.getAttribute('aria-expanded') === 'true' || false;\n//   backdrop.setAttribute('aria-expanded', !isMenuOpen);\n//   backdrop.classList.add('is-hidden');\n\n//   const scrollLockMethod = !isMenuOpen\n//     ? 'disableBodyScroll'\n//     : 'enableBodyScroll';\n//   bodyScrollLock[scrollLockMethod](document.body);\n// });\n"],"names":["$5ecfd846161dfc66$export$2e2bcd8739ae039","page","fetch","then","resp","json","$d7e3a8734d1a27b7$var$dataBox","document","querySelector","$d7e3a8734d1a27b7$export$2e2bcd8739ae039","data","murkUp","map","img","largeImageURL","webformatURL","tags","join","innerHTML","$1bab9c519cfa82bc$var$listRef","$1bab9c519cfa82bc$var$globalCurrentPage","$1bab9c519cfa82bc$var$childIndex","$1bab9c519cfa82bc$export$2e2bcd8739ae039","currentPage","allPages","children","firstElementChild","classList","add","$1bab9c519cfa82bc$var$createAccentCurrentPage","addEventListener","evt","Boolean","target","closest","Math","ceil","totalHits","hits","length","nodeName","textContent","Number"],"version":3,"file":"index.e4901d3d.js.map"}